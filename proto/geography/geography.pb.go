// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: geography.proto

package proto_geography

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// for BarGraph type
type BarColorType int32

const (
	BarColorType_FIXCOLOR BarColorType = 0
	BarColorType_VARCOLOR BarColorType = 1
)

// Enum value maps for BarColorType.
var (
	BarColorType_name = map[int32]string{
		0: "FIXCOLOR",
		1: "VARCOLOR",
	}
	BarColorType_value = map[string]int32{
		"FIXCOLOR": 0,
		"VARCOLOR": 1,
	}
)

func (x BarColorType) Enum() *BarColorType {
	p := new(BarColorType)
	*p = x
	return p
}

func (x BarColorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BarColorType) Descriptor() protoreflect.EnumDescriptor {
	return file_geography_proto_enumTypes[0].Descriptor()
}

func (BarColorType) Type() protoreflect.EnumType {
	return &file_geography_proto_enumTypes[0]
}

func (x BarColorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BarColorType.Descriptor instead.
func (BarColorType) EnumDescriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{0}
}

type BarShapeType int32

const (
	BarShapeType_BOX BarShapeType = 0
	BarShapeType_HEX BarShapeType = 1
)

// Enum value maps for BarShapeType.
var (
	BarShapeType_name = map[int32]string{
		0: "BOX",
		1: "HEX",
	}
	BarShapeType_value = map[string]int32{
		"BOX": 0,
		"HEX": 1,
	}
)

func (x BarShapeType) Enum() *BarShapeType {
	p := new(BarShapeType)
	*p = x
	return p
}

func (x BarShapeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BarShapeType) Descriptor() protoreflect.EnumDescriptor {
	return file_geography_proto_enumTypes[1].Descriptor()
}

func (BarShapeType) Type() protoreflect.EnumType {
	return &file_geography_proto_enumTypes[1]
}

func (x BarShapeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BarShapeType.Descriptor instead.
func (BarShapeType) EnumDescriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{1}
}

// geographic data  (mainly for supply)
type Geo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // may contain
	Id      int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Label   string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Data    []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Options string `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *Geo) Reset() {
	*x = Geo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Geo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Geo) ProtoMessage() {}

func (x *Geo) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Geo.ProtoReflect.Descriptor instead.
func (*Geo) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{0}
}

func (x *Geo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Geo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Geo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Geo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Geo) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From []float64 `protobuf:"fixed64,1,rep,packed,name=from,proto3" json:"from,omitempty"`
	To   []float64 `protobuf:"fixed64,2,rep,packed,name=to,proto3" json:"to,omitempty"`
}

func (x *Line) Reset() {
	*x = Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Line) ProtoMessage() {}

func (x *Line) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Line.ProtoReflect.Descriptor instead.
func (*Line) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{1}
}

func (x *Line) GetFrom() []float64 {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Line) GetTo() []float64 {
	if x != nil {
		return x.To
	}
	return nil
}

type Lines struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines []*Line `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
	Width int32   `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Color []int32 `protobuf:"varint,3,rep,packed,name=color,proto3" json:"color,omitempty"` // only top 3 is used
}

func (x *Lines) Reset() {
	*x = Lines{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lines) ProtoMessage() {}

func (x *Lines) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lines.ProtoReflect.Descriptor instead.
func (*Lines) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{2}
}

func (x *Lines) GetLines() []*Line {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *Lines) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Lines) GetColor() []int32 {
	if x != nil {
		return x.Color
	}
	return nil
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon float64 `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{3}
}

func (x *Point) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Point) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points []*Point `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	Width  int32    `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Color  []int32  `protobuf:"varint,3,rep,packed,name=color,proto3" json:"color,omitempty"` // only top 3 is used
}

func (x *Path) Reset() {
	*x = Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{4}
}

func (x *Path) GetPoints() []*Point {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *Path) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Path) GetColor() []int32 {
	if x != nil {
		return x.Color
	}
	return nil
}

type Paths struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths []*Path `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *Paths) Reset() {
	*x = Paths{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paths) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paths) ProtoMessage() {}

func (x *Paths) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paths.ProtoReflect.Descriptor instead.
func (*Paths) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{5}
}

func (x *Paths) GetPaths() []*Path {
	if x != nil {
		return x.Paths
	}
	return nil
}

type Arcs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Srcs    []*Point `protobuf:"bytes,1,rep,name=srcs,proto3" json:"srcs,omitempty"`
	Tgts    []*Point `protobuf:"bytes,2,rep,name=tgts,proto3" json:"tgts,omitempty"`
	SrcCols []int32  `protobuf:"varint,3,rep,packed,name=srcCols,proto3" json:"srcCols,omitempty"`
	TgtCols []int32  `protobuf:"varint,4,rep,packed,name=tgtCols,proto3" json:"tgtCols,omitempty"`
	Tilts   []int32  `protobuf:"varint,5,rep,packed,name=tilts,proto3" json:"tilts,omitempty"` // may no tilts
}

func (x *Arcs) Reset() {
	*x = Arcs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Arcs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arcs) ProtoMessage() {}

func (x *Arcs) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arcs.ProtoReflect.Descriptor instead.
func (*Arcs) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{6}
}

func (x *Arcs) GetSrcs() []*Point {
	if x != nil {
		return x.Srcs
	}
	return nil
}

func (x *Arcs) GetTgts() []*Point {
	if x != nil {
		return x.Tgts
	}
	return nil
}

func (x *Arcs) GetSrcCols() []int32 {
	if x != nil {
		return x.SrcCols
	}
	return nil
}

func (x *Arcs) GetTgtCols() []int32 {
	if x != nil {
		return x.TgtCols
	}
	return nil
}

func (x *Arcs) GetTilts() []int32 {
	if x != nil {
		return x.Tilts
	}
	return nil
}

type Scatters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points     []*Point `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	Radiuses   []int32  `protobuf:"varint,2,rep,packed,name=radiuses,proto3" json:"radiuses,omitempty"`
	FillColors []int32  `protobuf:"varint,3,rep,packed,name=fillColors,proto3" json:"fillColors,omitempty"` // 0xXXXXXX style color
	LineColors []int32  `protobuf:"varint,4,rep,packed,name=lineColors,proto3" json:"lineColors,omitempty"`
	LineWidth  int32    `protobuf:"varint,5,opt,name=lineWidth,proto3" json:"lineWidth,omitempty"`
	FillAlpha  int32    `protobuf:"varint,6,opt,name=fillAlpha,proto3" json:"fillAlpha,omitempty"` // if minus , no fill.
}

func (x *Scatters) Reset() {
	*x = Scatters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scatters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scatters) ProtoMessage() {}

func (x *Scatters) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scatters.ProtoReflect.Descriptor instead.
func (*Scatters) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{7}
}

func (x *Scatters) GetPoints() []*Point {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *Scatters) GetRadiuses() []int32 {
	if x != nil {
		return x.Radiuses
	}
	return nil
}

func (x *Scatters) GetFillColors() []int32 {
	if x != nil {
		return x.FillColors
	}
	return nil
}

func (x *Scatters) GetLineColors() []int32 {
	if x != nil {
		return x.LineColors
	}
	return nil
}

func (x *Scatters) GetLineWidth() int32 {
	if x != nil {
		return x.LineWidth
	}
	return 0
}

func (x *Scatters) GetFillAlpha() int32 {
	if x != nil {
		return x.FillAlpha
	}
	return 0
}

type TopTextLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"` // text for label
	Style string `protobuf:"bytes,2,opt,name=style,proto3" json:"style,omitempty"` // style sheet json for label
}

func (x *TopTextLabel) Reset() {
	*x = TopTextLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopTextLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopTextLabel) ProtoMessage() {}

func (x *TopTextLabel) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopTextLabel.ProtoReflect.Descriptor instead.
func (*TopTextLabel) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{8}
}

func (x *TopTextLabel) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *TopTextLabel) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

type ViewState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat      float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon      float64 `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
	Zoom     float64 `protobuf:"fixed64,3,opt,name=zoom,proto3" json:"zoom,omitempty"`
	Pitch    float64 `protobuf:"fixed64,4,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Duration float64 `protobuf:"fixed64,5,opt,name=duration,proto3" json:"duration,omitempty"` // for animation (animation time in sec)
}

func (x *ViewState) Reset() {
	*x = ViewState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewState) ProtoMessage() {}

func (x *ViewState) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewState.ProtoReflect.Descriptor instead.
func (*ViewState) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{9}
}

func (x *ViewState) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *ViewState) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *ViewState) GetZoom() float64 {
	if x != nil {
		return x.Zoom
	}
	return 0
}

func (x *ViewState) GetPitch() float64 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *ViewState) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type Bearing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bearing  float64 `protobuf:"fixed64,1,opt,name=bearing,proto3" json:"bearing,omitempty"`
	Duration float64 `protobuf:"fixed64,2,opt,name=duration,proto3" json:"duration,omitempty"` // for animation (animation time in sec)
}

func (x *Bearing) Reset() {
	*x = Bearing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bearing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bearing) ProtoMessage() {}

func (x *Bearing) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bearing.ProtoReflect.Descriptor instead.
func (*Bearing) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{10}
}

func (x *Bearing) GetBearing() float64 {
	if x != nil {
		return x.Bearing
	}
	return 0
}

func (x *Bearing) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type Pitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pitch    float64 `protobuf:"fixed64,1,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Duration float64 `protobuf:"fixed64,2,opt,name=duration,proto3" json:"duration,omitempty"` // for animation (animation time in sec)
}

func (x *Pitch) Reset() {
	*x = Pitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pitch) ProtoMessage() {}

func (x *Pitch) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pitch.ProtoReflect.Descriptor instead.
func (*Pitch) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{11}
}

func (x *Pitch) GetPitch() float64 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *Pitch) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type ClearMoves struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ClearMoves) Reset() {
	*x = ClearMoves{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearMoves) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearMoves) ProtoMessage() {}

func (x *ClearMoves) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearMoves.ProtoReflect.Descriptor instead.
func (*ClearMoves) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{12}
}

func (x *ClearMoves) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ClearScatters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ClearScatters) Reset() {
	*x = ClearScatters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearScatters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearScatters) ProtoMessage() {}

func (x *ClearScatters) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearScatters.ProtoReflect.Descriptor instead.
func (*ClearScatters) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{13}
}

func (x *ClearScatters) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ClearArcs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ClearArcs) Reset() {
	*x = ClearArcs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearArcs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearArcs) ProtoMessage() {}

func (x *ClearArcs) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearArcs.ProtoReflect.Descriptor instead.
func (*ClearArcs) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{14}
}

func (x *ClearArcs) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BarData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string  `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Color int32   `protobuf:"varint,3,opt,name=color,proto3" json:"color,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BarData) Reset() {
	*x = BarData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarData) ProtoMessage() {}

func (x *BarData) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarData.ProtoReflect.Descriptor instead.
func (*BarData) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{15}
}

func (x *BarData) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *BarData) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *BarData) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type BarGraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ts        *timestamp.Timestamp `protobuf:"bytes,2,opt,name=ts,proto3" json:"ts,omitempty"`
	ShapeType BarShapeType         `protobuf:"varint,3,opt,name=shapeType,proto3,enum=geography.BarShapeType" json:"shapeType,omitempty"`
	ColorType BarColorType         `protobuf:"varint,4,opt,name=colorType,proto3,enum=geography.BarColorType" json:"colorType,omitempty"`
	Color     int32                `protobuf:"varint,5,opt,name=color,proto3" json:"color,omitempty"`
	Lat       float64              `protobuf:"fixed64,6,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon       float64              `protobuf:"fixed64,7,opt,name=lon,proto3" json:"lon,omitempty"`
	Width     float64              `protobuf:"fixed64,8,opt,name=width,proto3" json:"width,omitempty"`
	Radius    float64              `protobuf:"fixed64,9,opt,name=radius,proto3" json:"radius,omitempty"`
	Min       float64              `protobuf:"fixed64,10,opt,name=min,proto3" json:"min,omitempty"`
	Max       float64              `protobuf:"fixed64,11,opt,name=max,proto3" json:"max,omitempty"`
	AreaColor int32                `protobuf:"varint,12,opt,name=areaColor,proto3" json:"areaColor,omitempty"`
	BarData   []*BarData           `protobuf:"bytes,13,rep,name=barData,proto3" json:"barData,omitempty"`
	Text      string               `protobuf:"bytes,14,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *BarGraph) Reset() {
	*x = BarGraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarGraph) ProtoMessage() {}

func (x *BarGraph) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarGraph.ProtoReflect.Descriptor instead.
func (*BarGraph) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{16}
}

func (x *BarGraph) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BarGraph) GetTs() *timestamp.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *BarGraph) GetShapeType() BarShapeType {
	if x != nil {
		return x.ShapeType
	}
	return BarShapeType_BOX
}

func (x *BarGraph) GetColorType() BarColorType {
	if x != nil {
		return x.ColorType
	}
	return BarColorType_FIXCOLOR
}

func (x *BarGraph) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *BarGraph) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *BarGraph) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *BarGraph) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *BarGraph) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *BarGraph) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *BarGraph) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *BarGraph) GetAreaColor() int32 {
	if x != nil {
		return x.AreaColor
	}
	return 0
}

func (x *BarGraph) GetBarData() []*BarData {
	if x != nil {
		return x.BarData
	}
	return nil
}

func (x *BarGraph) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type BarGraphs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bars []*BarGraph `protobuf:"bytes,1,rep,name=bars,proto3" json:"bars,omitempty"`
}

func (x *BarGraphs) Reset() {
	*x = BarGraphs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarGraphs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarGraphs) ProtoMessage() {}

func (x *BarGraphs) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarGraphs.ProtoReflect.Descriptor instead.
func (*BarGraphs) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{17}
}

func (x *BarGraphs) GetBars() []*BarGraph {
	if x != nil {
		return x.Bars
	}
	return nil
}

type HarmoVIS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfJson string `protobuf:"bytes,1,opt,name=confJson,proto3" json:"confJson,omitempty"` // json string
}

func (x *HarmoVIS) Reset() {
	*x = HarmoVIS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geography_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HarmoVIS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HarmoVIS) ProtoMessage() {}

func (x *HarmoVIS) ProtoReflect() protoreflect.Message {
	mi := &file_geography_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HarmoVIS.ProtoReflect.Descriptor instead.
func (*HarmoVIS) Descriptor() ([]byte, []int) {
	return file_geography_proto_rawDescGZIP(), []int{18}
}

func (x *HarmoVIS) GetConfJson() string {
	if x != nil {
		return x.ConfJson
	}
	return ""
}

var File_geography_proto protoreflect.FileDescriptor

var file_geography_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a,
	0x03, 0x47, 0x65, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2a, 0x0a, 0x04,
	0x4c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x65,
	0x73, 0x12, 0x25, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x2e, 0x4c, 0x69, 0x6e,
	0x65, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x2b, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f,
	0x6e, 0x22, 0x5c, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x65, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22,
	0x2e, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x79, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22,
	0x9c, 0x01, 0x0a, 0x04, 0x41, 0x72, 0x63, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x72, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x73, 0x72, 0x63, 0x73, 0x12, 0x24,
	0x0a, 0x04, 0x74, 0x67, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67,
	0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04,
	0x74, 0x67, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x43, 0x6f, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x73, 0x72, 0x63, 0x43, 0x6f, 0x6c, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x67, 0x74, 0x43, 0x6f, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x07, 0x74, 0x67, 0x74, 0x43, 0x6f, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6c, 0x74, 0x73, 0x22, 0xcc,
	0x01, 0x0a, 0x08, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x65,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6c, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6c, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x22, 0x3a, 0x0a,
	0x0c, 0x54, 0x6f, 0x70, 0x54, 0x65, 0x78, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x75, 0x0a, 0x09, 0x56, 0x69, 0x65,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70,
	0x69, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x3f, 0x0a, 0x07, 0x42, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x65,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x39, 0x0a, 0x05, 0x50, 0x69, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69,
	0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x0a,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x29, 0x0a, 0x0d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x63, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x25, 0x0a, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x72, 0x63, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x07, 0x42, 0x61, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xa0, 0x03, 0x0a, 0x08, 0x42, 0x61, 0x72, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x09,
	0x73, 0x68, 0x61, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x2e, 0x42, 0x61, 0x72, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x68, 0x61, 0x70, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x79, 0x2e, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c,
	0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x65, 0x61, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x79, 0x2e, 0x42, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x62, 0x61, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x34, 0x0a, 0x09, 0x42, 0x61, 0x72, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x62, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x2e, 0x42, 0x61,
	0x72, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x04, 0x62, 0x61, 0x72, 0x73, 0x22, 0x26, 0x0a, 0x08,
	0x48, 0x61, 0x72, 0x6d, 0x6f, 0x56, 0x49, 0x53, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x4a, 0x73, 0x6f, 0x6e, 0x2a, 0x2a, 0x0a, 0x0c, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49, 0x58, 0x43, 0x4f, 0x4c, 0x4f, 0x52,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x41, 0x52, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x10, 0x01,
	0x2a, 0x20, 0x0a, 0x0c, 0x42, 0x61, 0x72, 0x53, 0x68, 0x61, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x07, 0x0a, 0x03, 0x42, 0x4f, 0x58, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x45, 0x58,
	0x10, 0x01, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x79, 0x6e, 0x65, 0x72, 0x65, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67,
	0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_geography_proto_rawDescOnce sync.Once
	file_geography_proto_rawDescData = file_geography_proto_rawDesc
)

func file_geography_proto_rawDescGZIP() []byte {
	file_geography_proto_rawDescOnce.Do(func() {
		file_geography_proto_rawDescData = protoimpl.X.CompressGZIP(file_geography_proto_rawDescData)
	})
	return file_geography_proto_rawDescData
}

var file_geography_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_geography_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_geography_proto_goTypes = []interface{}{
	(BarColorType)(0),           // 0: geography.BarColorType
	(BarShapeType)(0),           // 1: geography.BarShapeType
	(*Geo)(nil),                 // 2: geography.Geo
	(*Line)(nil),                // 3: geography.Line
	(*Lines)(nil),               // 4: geography.Lines
	(*Point)(nil),               // 5: geography.Point
	(*Path)(nil),                // 6: geography.Path
	(*Paths)(nil),               // 7: geography.Paths
	(*Arcs)(nil),                // 8: geography.Arcs
	(*Scatters)(nil),            // 9: geography.Scatters
	(*TopTextLabel)(nil),        // 10: geography.TopTextLabel
	(*ViewState)(nil),           // 11: geography.ViewState
	(*Bearing)(nil),             // 12: geography.Bearing
	(*Pitch)(nil),               // 13: geography.Pitch
	(*ClearMoves)(nil),          // 14: geography.ClearMoves
	(*ClearScatters)(nil),       // 15: geography.ClearScatters
	(*ClearArcs)(nil),           // 16: geography.ClearArcs
	(*BarData)(nil),             // 17: geography.BarData
	(*BarGraph)(nil),            // 18: geography.BarGraph
	(*BarGraphs)(nil),           // 19: geography.BarGraphs
	(*HarmoVIS)(nil),            // 20: geography.HarmoVIS
	(*timestamp.Timestamp)(nil), // 21: google.protobuf.Timestamp
}
var file_geography_proto_depIdxs = []int32{
	3,  // 0: geography.Lines.lines:type_name -> geography.Line
	5,  // 1: geography.Path.points:type_name -> geography.Point
	6,  // 2: geography.Paths.paths:type_name -> geography.Path
	5,  // 3: geography.Arcs.srcs:type_name -> geography.Point
	5,  // 4: geography.Arcs.tgts:type_name -> geography.Point
	5,  // 5: geography.Scatters.points:type_name -> geography.Point
	21, // 6: geography.BarGraph.ts:type_name -> google.protobuf.Timestamp
	1,  // 7: geography.BarGraph.shapeType:type_name -> geography.BarShapeType
	0,  // 8: geography.BarGraph.colorType:type_name -> geography.BarColorType
	17, // 9: geography.BarGraph.barData:type_name -> geography.BarData
	18, // 10: geography.BarGraphs.bars:type_name -> geography.BarGraph
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_geography_proto_init() }
func file_geography_proto_init() {
	if File_geography_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_geography_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Geo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lines); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paths); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Arcs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scatters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopTextLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bearing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearMoves); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearScatters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearArcs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BarData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BarGraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BarGraphs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geography_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HarmoVIS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_geography_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_geography_proto_goTypes,
		DependencyIndexes: file_geography_proto_depIdxs,
		EnumInfos:         file_geography_proto_enumTypes,
		MessageInfos:      file_geography_proto_msgTypes,
	}.Build()
	File_geography_proto = out.File
	file_geography_proto_rawDesc = nil
	file_geography_proto_goTypes = nil
	file_geography_proto_depIdxs = nil
}
